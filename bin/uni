#!/usr/bin/env perl6

use v6;

# Given a single character, output hex, char itself, name, and props
multi output(Str $char) {
    my $props = '[' ~ $char.uniprops ~ ']';
    say (("U+" ~ $char.ord.fmt('%04X')), $char, $char.uninames, $props).join(' ');
}

multi output(Int $code) {
    output($code.chr);
}

# Search through all codepoint names, optionally as whole word
sub search(@criteria, :$w) {
    my @strings;
    my @regexes;
    for @criteria -> $criteria {
        if $criteria.starts-with('/') && $criteria.ends-with('/') {
            my $re = $criteria.substr(1,$criteria.chars-2).fc;
            if $w {
                @regexes.push(/« <$re> »/);
            } else {
                @regexes.push(/<$re>/);
            }
        } else {
            my $string = $criteria.fc;
            if $w {
                @regexes.push(/« <$string> »/);
            } else {
                @strings.push($string);
            }
        }
    }

    (0..0x10FFFF).grep(sub {
        my $names = $^a.chr.uninames.fc;
        for @strings -> $criteria {
            return False unless $names.contains($criteria);
        }
        for @regexes -> $criteria {
            return False unless $names ~~ $criteria;
        }
        return True
    }).map({output $_});
}

# -c : interpret as characters
# -u : interpret as hex codepoints
# -w : search codepoint names, using input as whole words
# -n : search codepoint names using input
# -s : interpret as single character

sub MAIN(*@input, :$c=False, :$u=False, :$w=False, :$s=False, :$n=False) {
    if $n or $w {
        search(@input, :$w);
        exit 0;
    }
    if $s {
        output(@input[0]);
        exit 0;
    }
    if $u {
        for @input -> $code {
            output($code.parse-base(16));
        }
        exit 0;
    }
    if $c {
        for @input.kv -> $pos, $word {
            for $word.comb -> $char {
                output($char);
            }
            say "" unless $pos == @input.elems-1
        }
        exit 0;
    } 

    if +@input == 1 and @input.chars == 1 {
        output(@input[0]);
    } else {
        # TODO "with the exception that search terms comprised entirely of hex digits are allowed to match against the codepoint's numeric value"
        search(@input);
    }
}
